package mx.redts.ob3.model;

// Generated 03-jun-2014 0:22:34 by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * CCountry generated by hbm2java
 */
@Entity
@Table(name = "c_country", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "countrycode"))
public class CCountry implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String CCountryId;
	private AdOrg adOrg;
	private CCountry CCountry;
	private CCurrency CCurrency;
	private String adClientId;
	private char isactive;
	private Date created;
	private String createdby;
	private Date updated;
	private String updatedby;
	private String name;
	private String description;
	private String countrycode;
	private char hasregion;
	private String regionname;
	private String expressionphone;
	private String displaysequence;
	private String expressionpostal;
	private char haspostalAdd;
	private String expressionpostalAdd;
	private Character isdefault;
	private String adLanguage;
	private BigDecimal ibannodigits;
	private String ibancountry;
	// private CCountry CCountry;
	private Set<CTax> CTaxesForCCountryId = new HashSet<CTax>(0);
	private Set<CLocation> CLocations = new HashSet<CLocation>(0);
	private Set<CTax> CTaxesForToCountryId = new HashSet<CTax>(0);
	private Set<CRegion> CRegions = new HashSet<CRegion>(0);

	public CCountry() {
	}

	public CCountry(AdOrg adOrg, CCountry CCountry, CCurrency CCurrency,
			String adClientId, char isactive, Date created, String createdby,
			Date updated, String updatedby, String name, String description,
			String countrycode, char hasregion, String regionname,
			String expressionphone, String displaysequence,
			String expressionpostal, char haspostalAdd,
			String expressionpostalAdd, Character isdefault,
			String adLanguage,
			BigDecimal ibannodigits,
			String ibancountry, // CCountry
								// CCountry,
			Set<CTax> CTaxesForCCountryId, Set<CLocation> CLocations,
			Set<CTax> CTaxesForToCountryId, Set<CRegion> CRegions) {
		this.adOrg = adOrg;
		this.CCountry = CCountry;
		this.CCurrency = CCurrency;
		this.adClientId = adClientId;
		this.isactive = isactive;
		this.created = created;
		this.createdby = createdby;
		this.updated = updated;
		this.updatedby = updatedby;
		this.name = name;
		this.description = description;
		this.countrycode = countrycode;
		this.hasregion = hasregion;
		this.regionname = regionname;
		this.expressionphone = expressionphone;
		this.displaysequence = displaysequence;
		this.expressionpostal = expressionpostal;
		this.haspostalAdd = haspostalAdd;
		this.expressionpostalAdd = expressionpostalAdd;
		this.isdefault = isdefault;
		this.adLanguage = adLanguage;
		this.ibannodigits = ibannodigits;
		this.ibancountry = ibancountry;
		this.CCountry = CCountry;
		this.CTaxesForCCountryId = CTaxesForCCountryId;
		this.CLocations = CLocations;
		this.CTaxesForToCountryId = CTaxesForToCountryId;
		this.CRegions = CRegions;
	}

	public CCountry(AdOrg adOrg, CCountry CCountry, String adClientId,
			char isactive, Date created, String createdby, Date updated,
			String updatedby, String name, String countrycode, char hasregion,
			String displaysequence, char haspostalAdd) {
		this.adOrg = adOrg;
		this.CCountry = CCountry;
		this.adClientId = adClientId;
		this.isactive = isactive;
		this.created = created;
		this.createdby = createdby;
		this.updated = updated;
		this.updatedby = updatedby;
		this.name = name;
		this.countrycode = countrycode;
		this.hasregion = hasregion;
		this.displaysequence = displaysequence;
		this.haspostalAdd = haspostalAdd;
	}

	@Column(name = "ad_client_id", nullable = false, length = 32)
	public String getAdClientId() {
		return this.adClientId;
	}

	@Column(name = "ad_language", length = 6)
	public String getAdLanguage() {
		return this.adLanguage;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ad_org_id", nullable = false)
	public AdOrg getAdOrg() {
		return this.adOrg;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public CCountry getCCountry() {
		return this.CCountry;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "CCountry"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "c_country_id", unique = true, nullable = false, length = 32)
	public String getCCountryId() {
		return this.CCountryId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "c_currency_id")
	public CCurrency getCCurrency() {
		return this.CCurrency;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "CCountry")
	public Set<CLocation> getCLocations() {
		return this.CLocations;
	}

	@Column(name = "countrycode", unique = true, nullable = false, length = 2)
	public String getCountrycode() {
		return this.countrycode;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	@Column(name = "createdby", nullable = false, length = 32)
	public String getCreatedby() {
		return this.createdby;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "CCountry")
	public Set<CRegion> getCRegions() {
		return this.CRegions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "CCountryByCCountryId")
	public Set<CTax> getCTaxesForCCountryId() {
		return this.CTaxesForCCountryId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "CCountryByToCountryId")
	public Set<CTax> getCTaxesForToCountryId() {
		return this.CTaxesForToCountryId;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	@Column(name = "displaysequence", nullable = false, length = 20)
	public String getDisplaysequence() {
		return this.displaysequence;
	}

	@Column(name = "expressionphone", length = 20)
	public String getExpressionphone() {
		return this.expressionphone;
	}

	@Column(name = "expressionpostal", length = 20)
	public String getExpressionpostal() {
		return this.expressionpostal;
	}

	@Column(name = "expressionpostal_add", length = 20)
	public String getExpressionpostalAdd() {
		return this.expressionpostalAdd;
	}

	@Column(name = "haspostal_add", nullable = false, length = 1)
	public char getHaspostalAdd() {
		return this.haspostalAdd;
	}

	@Column(name = "hasregion", nullable = false, length = 1)
	public char getHasregion() {
		return this.hasregion;
	}

	@Column(name = "ibancountry", length = 2)
	public String getIbancountry() {
		return this.ibancountry;
	}

	@Column(name = "ibannodigits", precision = 131089, scale = 0)
	public BigDecimal getIbannodigits() {
		return this.ibannodigits;
	}

	@Column(name = "isactive", nullable = false, length = 1)
	public char getIsactive() {
		return this.isactive;
	}

	@Column(name = "isdefault", length = 1)
	public Character getIsdefault() {
		return this.isdefault;
	}

	@Column(name = "name", nullable = false, length = 60)
	public String getName() {
		return this.name;
	}

	@Column(name = "regionname", length = 60)
	public String getRegionname() {
		return this.regionname;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 29)
	public Date getUpdated() {
		return this.updated;
	}

	@Column(name = "updatedby", nullable = false, length = 32)
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setAdClientId(String adClientId) {
		this.adClientId = adClientId;
	}

	public void setAdLanguage(String adLanguage) {
		this.adLanguage = adLanguage;
	}

	public void setAdOrg(AdOrg adOrg) {
		this.adOrg = adOrg;
	}

	public void setCCountry(CCountry CCountry) {
		this.CCountry = CCountry;
	}

	public void setCCountryId(String CCountryId) {
		this.CCountryId = CCountryId;
	}

	public void setCCurrency(CCurrency CCurrency) {
		this.CCurrency = CCurrency;
	}

	public void setCLocations(Set<CLocation> CLocations) {
		this.CLocations = CLocations;
	}

	public void setCountrycode(String countrycode) {
		this.countrycode = countrycode;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	public void setCRegions(Set<CRegion> CRegions) {
		this.CRegions = CRegions;
	}

	public void setCTaxesForCCountryId(Set<CTax> CTaxesForCCountryId) {
		this.CTaxesForCCountryId = CTaxesForCCountryId;
	}

	public void setCTaxesForToCountryId(Set<CTax> CTaxesForToCountryId) {
		this.CTaxesForToCountryId = CTaxesForToCountryId;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public void setDisplaysequence(String displaysequence) {
		this.displaysequence = displaysequence;
	}

	public void setExpressionphone(String expressionphone) {
		this.expressionphone = expressionphone;
	}

	public void setExpressionpostal(String expressionpostal) {
		this.expressionpostal = expressionpostal;
	}

	public void setExpressionpostalAdd(String expressionpostalAdd) {
		this.expressionpostalAdd = expressionpostalAdd;
	}

	public void setHaspostalAdd(char haspostalAdd) {
		this.haspostalAdd = haspostalAdd;
	}

	public void setHasregion(char hasregion) {
		this.hasregion = hasregion;
	}

	// @OneToOne(fetch = FetchType.LAZY, mappedBy = "CCountry")
	// public CCountry getCCountry() {
	// return this.CCountry;
	// }
	//
	// public void setCCountry(CCountry CCountry) {
	// this.CCountry = CCountry;
	// }

	public void setIbancountry(String ibancountry) {
		this.ibancountry = ibancountry;
	}

	public void setIbannodigits(BigDecimal ibannodigits) {
		this.ibannodigits = ibannodigits;
	}

	public void setIsactive(char isactive) {
		this.isactive = isactive;
	}

	public void setIsdefault(Character isdefault) {
		this.isdefault = isdefault;
	}

	public void setName(String name) {
		this.name = name;
	}

	public void setRegionname(String regionname) {
		this.regionname = regionname;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

}
